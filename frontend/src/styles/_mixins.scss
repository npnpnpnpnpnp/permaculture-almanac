@mixin focus-default($color: var(--color-focus-default)) {
  &:focus {
    background-color: $color;
    outline: 0;
  }

  // Reset outline styling set by normalize.css
  &:-moz-focusring {
    outline: none;
  }
}

%tap-highlight-reset {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

%input-reset {
  padding: 0;
  margin: 0;
  font: inherit;
  line-height: inherit;
  color: inherit;
  text-transform: inherit;
  letter-spacing: inherit;
  background-color: transparent;
  border: none;
  border-radius: 0;
  appearance: none;
}

%button-reset {
  @extend %input-reset;

  cursor: pointer;
  user-select: none;
}

%button-default {
  padding: calc(var(--blank-line) / 4) calc(var(--gutter) / 2);
  border: 1px solid var(--green-light);
  border-radius: 1em;
  transition: background-color var(--xshort);

  &:focus {
    // @include focus-default(var(--green-light-alpha));
    // focus color defined by mixin does not allow for additional hover states. likely due to the mixin being applied to whole class and not respecting cascade
    background-color: var(--green-light-alpha);
  }

  &:hover {
    background-color: var(--green-medium);
  }
}

%link-reset {
  color: inherit;
  text-decoration: none;
}

%link-default {
  border-bottom: 1px dotted var(--green-light);

  &:hover {
    border-bottom-style: dashed;
  }
}

%grid-columns {
  .link {
    grid-column: 1 / 2;
  }

  .authors {
    grid-column: 2 / 3;
  }

  .tags {
    display: none;

    @media (min-width: $large) {
      display: inline-block;
      grid-column: 3 / 4;
    }
  }

  .description {
    display: none;

    @media (min-width: $xlarge) {
      display: inline-block;
      grid-column: 4 / 5;
      max-width: 40em;
    }
  }

  .category {
    display: none;

    @media (min-width: $xsmall) {
      display: inline-block;
      grid-column: 3 / 4;
    }

    @media (min-width: $large) {
      grid-column: 4 / 5;
    }

    @media (min-width: $xlarge) {
      grid-column: 5 / 6;
    }
  }
}

%base-bodytext {
  a {
    @extend %link-reset;
    @extend %link-default;
  }

  p {
    // hyphens: auto;
    // text-align: justify;

    &:not(:last-child) {
      margin-bottom: var(--blank-line);
    }
  }
}
